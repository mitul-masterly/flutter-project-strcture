default_platform(:ios)

# Configured for Staging builds

platform :ios do
  desc "Submit a new build to TestFlight"
  lane :upload_to_testflight do |options|

    scheme = options[:scheme] || "staging"
    flavor = options[:flavor] || "staging"

    # Ensure correct configuration
    build_configuration = flavor == "prod" ? "Release-prod" : "Release-staging"

    # Build the app
    sh "flutter build ipa --flavor #{flavor} --release"

    build_app(
        scheme: "scheme",
        export_method: "app-store",
        export_options: {
          signingStyle: "manual",
          provisioningProfiles: {
            "com.masterly.flutterbasecodestg" => "masterly_flutterbasecode_ios_appstore"
          }
        }
      )

    # Upload to TestFlight
    pilot(
      app_identifier: "com.masterly.flutterbasecodestg",
      api_key: {
            key_id: ENV['APP_STORE_KEY_ID'],
            issuer_id: ENV['APP_STORE_ISSUER_ID'],
            key_content: ENV['APP_STORE_API_KEY'],
            is_key_content_base64: false
          },
      team_id: ENV['FASTLANE_TEAM_ID'],
      skip_waiting_for_build_processing: false
    )
  end

#  desc "Submit a new build to App Store"
#   lane :upload_to_app_store do |options|
#
#       scheme = options[:scheme] || "Runner"
#       flavor = options[:flavor] || "prod"
#       build_configuration = "Release"
#
#       # Build the app using Flutter
#       sh "flutter build ipa --flavor #{flavor} --release"
#
#       # Upload to App Store
#       deliver(
#         app_identifier: "com.masterly.flutterbasecodestg",
#         api_key_path: "./fastlane/AuthKey_#{ENV['APP_STORE_KEY_ID']}.p8",
#         api_key_id: ENV['APP_STORE_KEY_ID'],
#         issuer_id: ENV['APP_STORE_ISSUER_ID'],
#         team_id: ENV['FASTLANE_TEAM_ID'],
#         skip_metadata: true,
#         skip_screenshots: true,
#         force: true
#       )
#     end
end
